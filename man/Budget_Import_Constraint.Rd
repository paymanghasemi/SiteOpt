% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Budget.R
\name{Budget_Import_Constraint}
\alias{Budget_Import_Constraint}
\title{Import Budget Constraint's data from Excel file}
\usage{
Budget_Import_Constraint(Address, Sheet= "Budget", Limit= NULL,
                                Silence= FALSE, Env= .GlobalEnv)
}
\arguments{
\item{Address}{A string: the location and name of the excel file.}

\item{Sheet}{A string: the name of the sheet holding the budget constraint data. (Default: "Budget")}

\item{Limit}{A double: defining the budget limit (right-hand-side). If \code{NULL}, the Limit will be read from the excel file. (Default: NULL)}

\item{Silence}{A binary parameter: if \code{FALSE}, the function will report a summary message. If \code{TRUE}, the function will be silent.  (Default: FALSE)}

\item{Env}{the environment where the package should create or access variables.
By default the package works in the R's Global environment. (Default: .GlobalEnv)}
}
\value{
NULL (creates some variables in the environment but returns nothing)
}
\description{
\code{Budget_Import_Constraint} imports the Budget Constraint's data from a sheet in an excel file.
Everytime used, it will add a member to a list named \code{Budget} which will store the budget constraints.\cr
(For more information, refer to \link{Budget_Add_Constraint})
\cr
}
\details{
The first row of the sheet will be ignored as captions. The first column of the sheet should have names of parcels in the constraint,
and the second column should have the parcels' respective coefficients.
The \bold{Budget Limit} can be passed as a Parameter when calling the \code{Budget_Import_Constraint}, for instance \code{Limit= 50}.
Otherwise, if \code{Limit = NULL}, the function will look for a row named "Limit" in the input sheet and use its value as the constraints limit.\cr
Here is an example Budget constraint table:

\if{html}{\figure{Budget.jpg}{}}
\if{latex}{\figure{Budget.jpg}{options: width=2.0in}}\cr

\strong{Removing a budget:} Budget \code{i} can be removed using the following code:

\code{Budget[[i]]<-NULL}

\strong{Removing all budget constraints:} All budget constraints can be removed using the following code:

\code{remove(Budget)}
}
\examples{
\dontrun{

## To read the data and import the budget limit from the excel file ##

Budget_Import_Constraint("C:\\\\example.xlsx", Sheet= "Budget", Limit= NULL)

## To read the data from excel file, and put the Budget limit equal to 60.
(It will ignore the limit defined in the excel file) ##

Budget_Import_Constraint("C:\\\\example.xlsx", Sheet= "Budget", Limit= 60)

}

}
\seealso{
Other Budget Constraints: 
\code{\link{Budget_Add_Constraint}()}
}
\concept{Budget Constraints}
