% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Load_problem.R
\name{Load_Problem}
\alias{Load_Problem}
\title{Load the optimization problem into Julia environment (optional)}
\usage{
Load_Problem(First_Objective=0, Second_Objective=0, Risk_Objective=0,
                    Solver="SCIP", Silence= FALSE, Env= .GlobalEnv)
}
\arguments{
\item{First_Objective}{A binary parameter: If \bold{1}, the first objective function (\code{First_Objectove}) will be included in optimization.
If \bold{0}, it will \strong{not} be included in optimization.}

\item{Second_Objective}{A binary parameter: If \bold{1}, the second objective function (\code{Second_Objectove}) will be included in optimization.
If \bold{0}, it will \strong{not} be included in optimization.}

\item{Risk_Objective}{A binary parameter: If \bold{1}, the Risk objective function (\code{Risk_Objectove}) will be included in optimization.
If \bold{0}, it will \strong{not} be included in optimization.}

\item{Solver}{A string: defining the solver to be used to solve the problem. (Default= "SCIP")}

\item{Silence}{A binary parameter: if \code{FALSE}, the function will report a summary message. If \code{TRUE}, the function will be silent.  (Default: FALSE)}

\item{Env}{the environment where the package should create or access variables.
By default the package works in the R's Global environment. (Default: .GlobalEnv)}
}
\value{
NULL (creates some variables in the environment but returns nothing)
}
\description{
\code{Load_Problem} loads the optimization problem into Julia environment. When using each of the Optimize functions, \code{Load_Problem} will be automatically called
prior to solving the problem. However, the user may want to use \code{Load_Problem} to ensure that there is no error in the process of loading the problem and
setting up Julia.
}
\details{
\code{Load_Problem} sets up the Julia environment and creats the necessary variables and functions in Julia. It will also create the optimization model
without solving it.\cr

Based on the existance of variables named "Budget", "Connectivity", "Disconnectivity", and "Constraints",
\code{Load_Problem} will include their respective constraints in the model. If the user does not want to include any of these constraints
in the model, its respective variable should not exists in the environment. In other words, if \verb{exists("Budget", envir= *)==TRUE}, the function will create the Budget constraints
in the model, and if \verb{exists("Budget", envir= *)==FALSE}, no Budget constraint will be included in the optimization model.
(Note: * refers to the environment passed to the function as \code{Env} parameter.)
}
\examples{
\dontrun{

## to load objective one and two, but not the risk objective, into Julia environment ##

Load_Problem(First_Objective=1, Second_Objective=1, Risk_Objective=0, Solver="SCIP")

}


}
\seealso{
Other Optimizer Functions: 
\code{\link{Optimize_First_Objective}()},
\code{\link{Optimize_NBP}()},
\code{\link{Optimize_Second_Objective}()},
\code{\link{Optimize_WSO}()}
}
\concept{Optimizer Functions}
