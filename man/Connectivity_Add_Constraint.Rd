% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Connectivity.R
\name{Connectivity_Add_Constraint}
\alias{Connectivity_Add_Constraint}
\title{Create a Connectivity Constraint}
\usage{
Connectivity_Add_Constraint(Target, Condition, Repetition = TRUE,
                                   Silence=FALSE, Env= .GlobalEnv)
}
\arguments{
\item{Target}{A string: the name of a parcel which can only be protected (invested) only if at least one of the \code{Condition} parcels are protected (invested)}

\item{Condition}{A vector of strings: the names of the parcels that if at least one of them are protected (invested), the \code{Target} can be protected (invested).}

\item{Repetition}{A binary parameter: If \code{TRUE}, the \code{Condition} parcels will create a new constraint for \code{Target}.
If \code{FALSE}, the \code{Condition} parcels will be added to the \bold{first} existing connectivity constraint of \code{Target}, i.e. \code{Connectivity[["Target"]][[1]]}. (Default: TRUE)}

\item{Silence}{A binary parameter: if \code{FALSE}, the function will report a summary message. If \code{TRUE}, the function will be silent.  (Default: FALSE)}

\item{Env}{the environment where the package should create or access variables.
By default the package works in the R's Global environment. (Default: .GlobalEnv)}
}
\value{
NULL (creates some variables in the environment but returns nothing)
}
\description{
\code{Connectivity_Add_Constraint} creates a Connectivity Constraint in the optimization model of the form:\cr
\eqn{Target \le \sum (Condition)  }.\cr
This constraint means that the parcel \code{Target} can be protected (invested)
\bold{only if} at least one of the parcels in \code{Condition} are protected (invested).
}
\details{
When used for the first time, \code{Connectivity_Add_Constraint} or \link{Connectivity_Import_Constraint}
will create a list named \code{Connectivity} in the environment.
When, for the first time, a connectivity constraint is added for a \code{Target} parcel, for instance named "Parcel_1",
a new member named "Parcel_1" will be added to the \code{Connectivity} list, i.e. \code{Connectivity[["Parcel_1"]]}.

Then, if \code{Repetition=FALSE}, whenever \code{Connectivity_Add_Constraint} or \link{Connectivity_Import_Constraint} are used for "Parcel_1", the \code{Condition}
parcels will be added to the "Parcel_1"'s first connectivity constraint, i.e. \code{Connectivity[["Parcel_1"]][[1]]}.
Otherwise, if \code{Repetition=TRUE}, the \code{Condition} parcels will create a new constraint for "Parcel_1", i.e. \code{Connectivity[["Parcel_1"]][[i+1]]},
where \code{i} is the number of "Parcel_1"'s existing connectivity constraints.

\strong{Removing a specific connectivity constraint of a \code{Target}:} Connectivity constraint \code{i} of a parcel named "Parcel_j"
can be removed using the following code:

\code{Connectivity[["Parcel_j"]][[i]]<-NULL}

\strong{Removing all Connectivity constraints of a \code{Target}:} Connectivity constraints of a parcel named "Parcel_j"
can be removed using the following code:

\code{Connectivity[["Parcel_j"]]<-NULL}

\strong{Remove all Connectivity Constraints:} All of the Connectivity constraints can be removed using the following code:

\code{remove(Connectivity)}
}
\examples{
\dontrun{

Connectivity_Add_Constraint(Target= "Parcel_1", Condition= "Parcel_4",
                           Repetition=TRUE)

## This will create Connectivity[["Parcel_1"]][[1]] and
add the following constraint to the optimization model
Parcel_1 <= Parcel_4 . Now, if the code ##

Connectivity_Add_Constraint(Target= "Parcel_1", Condition= c("Parcel_2","Parcel_3"),
                            Repetition=TRUE)

## is run, Connectivity[["Parcel_1"]][[2]] will be created,
and the following constraint will be added to the optimization model
Parcel_1 <= Parcel_2 + Parcel_3 . However, if the code ##

Connectivity_Add_Constraint(Target= "Parcel_1", Condition= c("Parcel_2","Parcel_3"),
                            Repetition=FALSE)

## is run, only Connectivity[["Parcel_1"]][[1]] will be updated,
 and its existing constraint will be updated in the optimization model as
Parcel_1 <= Parcel_4 + Parcel_2 + Parcel_3 .
}


}
\seealso{
Other Connectivity Constraints: 
\code{\link{Connectivity_Import_Constraint}()}

Other Constraints: 
\code{\link{Add_Constraint}()},
\code{\link{Budget_Add_Constraint}()},
\code{\link{Disconnectivity_Add_Constraint}()}
}
\concept{Connectivity Constraints}
\concept{Constraints}
